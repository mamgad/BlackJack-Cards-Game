package black.jack.game;

import static black.jack.game.BlackJackGame.Cards;
import java.awt.Color;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Mohamed Amgad
 */
public class Frame extends javax.swing.JFrame {

    JPanel jPanel1 = new JPanel();
    public BufferedImage img, background;
    int x = 100;
    int y = 100;
    Card Player1[] = new Card[6];
    Card Player2[] = new Card[6];
    int c1 = 0;
    int c2 = 0;
    boolean flag = false;
    boolean ace1 = false;
    boolean ace2 = false;
    boolean pass1 = false;
    boolean pass2 = false;
    int score1 = 0;
    int score2 = 0;

    String url = "C:/Users/Mohamed Amgad/Desktop/New folder (2)/1.png";

    /**
     * Creates new form Frame
     */
    public Frame() {
        initComponents();
        UpdateImage();
        jPanel1.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jPanel2 = new black.jack.game.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 102, 51));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Get a Card");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 557, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 177, Short.MAX_VALUE)
        );

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("Get a Card");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Pass");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Pass");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(317, 317, 317))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 555, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(158, 158, 158))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(606, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        Rand_Card();
        //  UpdateImage();
        jButton1.setEnabled(false);
        jButton2.setEnabled(true);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        Rand_Card1();
        jButton2.setEnabled(false);
        jButton1.setEnabled(true);

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
       if (pass2==true){if (score1>score2){score2=-1;}
       if (score1<score2){score1=-1;}
       repaint();
       }
        pass1 = true;        // TODO add your handling code here:
        jButton2.setEnabled(true);

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        if (pass1==true){if (score1>score2){score2=-1;}
       if (score1<score2){score1=-1;}
       repaint();
        pass2 = true; }       // TODO add your handling code here:
        jButton1.setEnabled(true);
    }//GEN-LAST:event_jButton4ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frame().setVisible(true);

            }
        });
    }
    //  @Override

    public Card Rand_Card() {

        int Rand = (int) (Math.random() * 52);
        Card x = Cards[Rand];
        int s;
        if (c1 < 6) {
            Player1[c1++] = x;
            if (x.getNum() < 4) {
                ace1 = true;
                s = 10;
            } else if (x.getNum() > 40) {
                s = 10;
            } else {
                s = (x.getNum() / 4) + 1;
            }
            score1 = score1 + s;
            if (score1 > 21) {
                if (ace1 == true) {
                    ace1 = false;
                    score1 = score1 - 10;
                } else {
                    score1 = -1;
                }
            }

        } else {
            System.out.println("limit reached");
            for (int i = 0; i < 6; i++) {
                System.out.println("++" + Player1[i].getLoc());
            }
        }
        System.out.println("Random Card is no." + x.getNum());

        repaint();

        return x;
    }

    public Card Rand_Card1() {

        int Rand = (int) (Math.random() * 52);
        Card x = Cards[Rand];
        int s;
        if (c2 < 6) {
            Player2[c2++] = x;
            if (x.getNum() < 4) {
                ace2 = true;
                s = 10;
            } else if (x.getNum() > 40) {
                s = 10;
            } else {
                s = (x.getNum() / 4) + 1;
            }
            score2 = score2 + s;
            if (score2 > 21) {
                if (ace2 == true) {
                    ace2 = false;
                    score2 = score2 - 10;
                } else {
                    score2 = -1;
                }
            }
        } else {
            System.out.println("limit reached");
            for (int i = 0; i < 6; i++) {
                System.out.println("++" + Player2[i].getLoc());
            }
        }
        System.out.println("Random Card is no." + x.getNum());

        repaint();

        return x;
    }

    void UpdateImage() {
        try {
            img = ImageIO.read(new File(url));
            background = ImageIO.read(new File(BlackJackGame.WD.replace("\\", "/")+"src/Images/Plain-Green-Background1.jpg"));
        } catch (IOException ex) {
            Logger.getLogger(Frame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void draw(int x1, int y1, String addr) {
        x = x1;
        y = y1;
        url = addr;

        repaint();
    }

    public void paint(Graphics g) {
        System.out.println("-" + BlackJackGame.Cards[2].getNum());

        g.fillRect(0, 0, 1000, 1000);
        g.drawImage(background, 0, 0, null);

        // g.drawImage(img, x, y, null);
        x = 100;

        for (int i = 0; i < c1; i++) {

            // UpdateImage();
            x = x + 50;
            g.drawImage(Player1[i].img, x, y, null);
        }
        x = 900;
        for (int i = 0; i < c2; i++) {

            // UpdateImage();
            x = x + 50;
            g.drawImage(Player2[i].img, x, y, null);
        }
        jButton1.setBackground(Color.blue);
        jButton2.setBackground(Color.blue);
         jButton3.setBackground(Color.blue);
        jButton4.setBackground(Color.blue);
        jButton1.setBackground(Color.red);
        jButton2.setBackground(Color.red);
        jButton3.setBackground(Color.gray);
        jButton4.setBackground(Color.gray);
        g.setFont(new Font("TimesRoman", Font.PLAIN, 20));
        g.setColor(Color.white);

        if (score1 == -1) {
            
             g.setFont(new Font("TimesRoman", Font.PLAIN, 80));
        g.setColor(Color.green);
            g.drawString("Player 2 Won this Round", 200,500);
        } else {
            g.drawString("Score is :" + score1, 100, 80);
        }
       g.setFont(new Font("TimesRoman", Font.PLAIN, 20));
        g.setColor(Color.white);
if (score2 == -1) {
            g.setFont(new Font("TimesRoman", Font.PLAIN, 80));
        g.setColor(Color.green);
            g.drawString("Player 1 Won this Round", 200,500);
        } else {
            g.drawString("Score is :" + score2, 1200, 80);
        }g.setFont(new Font("TimesRoman", Font.PLAIN, 20));
        g.setColor(Color.white);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private black.jack.game.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
}
